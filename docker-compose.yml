version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: eventhub_postgres
    restart: unless-stopped
    env_file:
      - ./backend/.env
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - eventhub_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eventhub"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: eventhub_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - eventhub_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Go API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: eventhub_backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    ports:
      - "8080:8080"
      
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - eventhub_network

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: eventhub_pgadmin
    restart: unless-stopped
    env_file:
      - ./backend/.env
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - postgres
    networks:
      - eventhub_network

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: eventhub_redis_commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - eventhub_network

# Volumes for data persistence
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# Network
networks:
  eventhub_network:
    driver: bridge